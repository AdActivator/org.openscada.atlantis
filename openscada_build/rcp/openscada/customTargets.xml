<project name="Build specific targets and properties" default="noDefault">

  <import file="tools.xml" />
  <import file="${libfile}"/>

  <!-- ===================================================================== -->
  <!-- Run a given ${target} on all elements being built -->
  <!-- Add on <ant> task for each top level element being built. -->
  <!-- ===================================================================== -->
  <property name="allElementsFile" value="${builder}/allElements.xml"/>
  <import file="${allElementsFile}" />
  <target name="allElements">
    <antcall target="allElementsDelegator" />
  </target>
  
  <!-- ===================================================================== -->
  <!-- ===================================================================== -->
  <target name="getBaseComponents" depends="checkLocalBase" unless="skipBase">
    <get src="${eclipseBaseURL}" dest="${buildDirectory}/../temp-base.zip" />
    <unzip dest="${base}" overwrite="true" src="${buildDirectory}/../temp-base.zip" />
  </target>

  <target name="checkLocalBase">
    <available file="${base}" property="skipBase" />
  </target>

  <!-- ===================================================================== -->
  <!-- Check out map files from correct repository -->
  <!-- Replace values for mapsCheckoutTag as desired. -->
  <!-- ===================================================================== -->
  <target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
    <property name="mapsCheckoutTag" value="HEAD" />
    <cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
  </target>

  <target name="checkLocalMaps">
    <available property="skipMaps" file="${buildDirectory}/maps" />
  </target>

  <target name="tagMapFiles" if="tagMaps">
    <cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
  </target>

  <!-- ===================================================================== -->

  <target name="clean" unless="noclean">
    <antcall target="allElements">
      <param name="target" value="cleanElement" />
    </antcall>
  </target>

  <target name="gatherLogs">
    <mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
    <antcall target="allElements">
      <param name="target" value="gatherLogs" />
    </antcall>
    <unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
      <fileset dir="${buildDirectory}/features">
        <include name="**/*.log.zip" />
      </fileset>
    </unzip>
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before setup -->
  <!-- ===================================================================== -->
  <target name="preSetup">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after setup but before starting the build proper -->
  <!-- ===================================================================== -->
  <target name="postSetup">
    <antcall target="getBaseComponents" />
	
  	<fetch-module src="${svn.base}/org.openscada.external.org.apache.log4j" type="plugin" name="org.openscada.external.org.apache.log4j"/>
  	<fetch-module src="${svn.base}/org.apache.mina" type="plugin" name="org.apache.mina"/>
	<fetch-module src="${svn.base}/org.openscada.rcp.update" type="plugin" name="org.openscada.rcp.update"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.test" type="plugin" name="org.openscada.da.client.test"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.test.feature" type="feature" name="org.openscada.da.client.test"/>
  	<fetch-module src="${svn.base}/org.openscada.da.net.client.feature" type="feature" name="org.openscada.da.net.client"/>
	<fetch-module src="${svn.base}/org.openscada.da.ice.client.feature" type="feature" name="org.openscada.da.ice.client"/>
  	<fetch-module src="${svn.ext.base}/xmlbeans_plugin" type="plugin" name="ext_plugin_xmlbeans"/>  	
  	<fetch-module src="${svn.ext.base}/plugins/icej" type="plugin" name="ext_plugin_icej"/>
	<fetch-module src="${svn.ext.base}/plugins/jfreechart" type="plugin" name="ext_plugin_jfreechart"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client" type="plugin" name="org.openscada.da.client"/>
  	<fetch-module src="${svn.base}/org.openscada.da.ice.client" type="plugin" name="org.openscada.da.ice.client"/>
	<fetch-module src="${svn.base}/org.openscada.da.net.client" type="plugin" name="org.openscada.da.net.client"/>
	<fetch-module src="${svn.base}/org.openscada.da.rcp.LocalTestServer" type="plugin" name="org.openscada.da.rcp.LocalTestServer"/>
	<fetch-module src="${svn.base}/org.openscada.rcp.client" type="plugin" name="org.openscada.rcp.client"/>
	<fetch-module src="${svn.base}/org.openscada.rcp.client.feature" type="feature" name="org.openscada.rcp.client"/>
	<fetch-module src="${svn.base}/org.openscada.ae.net.client" type="plugin" name="org.openscada.ae.net.client"/>
	<fetch-module src="${svn.base}/org.openscada.ae.client.test" type="plugin" name="org.openscada.ae.client.test"/>
	<fetch-module src="${svn.base}/org.openscada.ae.client.test.feature" type="feature" name="org.openscada.ae.client.test"/>
	<fetch-module src="${svn.base}/org.openscada.ae.rcp.LocalTestServer" type="plugin" name="org.openscada.ae.rcp.LocalTestServer"/>
	<fetch-module src="${svn.base}/org.openscada.da.client.viewer" type="plugin" name="org.openscada.da.client.viewer"/>
	<fetch-module src="${svn.base}/org.openscada.da.client.chart" type="plugin" name="org.openscada.da.client.chart"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.base" type="plugin" name="org.openscada.da.client.base"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.dataitem.details" type="plugin" name="org.openscada.da.client.dataitem.details"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.dataitem.details.extra" type="plugin" name="org.openscada.da.client.dataitem.details.extra"/>
  	<fetch-module src="${svn.base}/org.openscada.da.client.connection.manager.view" type="plugin" name="org.openscada.da.client.connection.manager.view"/>
  	
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before fetching the build elements -->
  <!-- ===================================================================== -->
  <target name="preFetch">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after fetching the build elements -->
  <!-- ===================================================================== -->
  <target name="postFetch">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before generating the build scripts. -->
  <!-- ===================================================================== -->
  <target name="preGenerate">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after generating the build scripts. -->
  <!-- ===================================================================== -->
  <target name="postGenerate">
    <antcall target="clean" />
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before running the build.xmls for the elements being built. -->
  <!-- ===================================================================== -->
  <target name="preProcess">
	<ant antfile="schema_build.xml" dir="${buildDirectory}/plugins/org.openscada.da.client.viewer">
	</ant>
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after running the build.xmls for the elements being built. -->
  <!-- ===================================================================== -->
  <target name="postProcess">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before running assemble. -->
  <!-- ===================================================================== -->
  <target name="preAssemble">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after  running assemble. -->
  <!-- ===================================================================== -->
  <target name="postAssemble">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do before running package. -->
  <!-- ===================================================================== -->
  <target name="prePackage">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after  running package. -->
  <!-- ===================================================================== -->
  <target name="postPackage">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do after the build is done. -->
  <!-- ===================================================================== -->
  <target name="postBuild">
    <antcall target="gatherLogs" />
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do to test the build results -->
  <!-- ===================================================================== -->
  <target name="test">
  </target>

  <!-- ===================================================================== -->
  <!-- Steps to do to publish the build results -->
  <!-- ===================================================================== -->
  <target name="publish">
  </target>

  <!-- ===================================================================== -->
  <!-- Default target                                                        -->
  <!-- ===================================================================== -->
  <target name="noDefault">
    <echo message="You must specify a target when invoking this file" />
  </target>

</project>