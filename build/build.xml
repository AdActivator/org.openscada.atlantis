<?xml version="1.0"?>
<!-- ====================================================================== 
     Aug 17, 2006 2:03:35 PM                                                        

     OpenSCADA    
     The OpenSCADA project
                   
     jens                                                                
     ====================================================================== -->
<project name="openscada" default="all">
    <description>
    	The OpenSCADA project
    </description>
	
	<property name="version" value="0.4.0"/>
	<property name="release" value="-nightly"/>
	<property name="build.base" value="build"/>
	<property name="dist.base" value="dist"/>
	<property name="upload.base" value="upload"/>
	<property name="source.base" value="source"/>
	
	<property name="svn.base" value="https://svn.inavare.net/openscada"/>
	<property name="svn.openscada" value="${svn.base}/modules/atlantis"/>
	<property name="svn.ext" value="${svn.base}/external"/>
	
	<property name="api.href.base" value="http://openscada.org/download/atlantis/${version}${release}/docs/api"/>

	<path id="log4j.classpath">
		<pathelement location="${source.base}/ext_log4j/log4j-1.2.13.jar"/>
	</path>
	<path id="junit4.classpath">
		<pathelement location="${source.base}/ext_junit/junit-4.1.jar"/>
	</path>
	<path id="snmp.classpath">
		<pathelement location="${source.base}/ext_SNMP4J/SNMP4J.jar"/>
		<pathelement location="${source.base}/ext_mibble/grammatica-bin-1.4.jar"/>
		<pathelement location="${source.base}/ext_mibble/mibble-mibs-2.7.jar"/>
		<pathelement location="${source.base}/ext_mibble/mibble-parser-2.7.jar"/>
	</path>
	<path id="xmlbean.classpath">
		<pathelement location="${source.base}/ext_xmlbeans/xbean.jar"/>
		<pathelement location="${source.base}/ext_xmlbeans/jsr173_1.0_api.jar"/>
	</path>

    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="all" depends="init, clean, fetch, compile, dist, dist_src, pack" description="">
    	<ant antfile="build.xml" dir="rcp">
    	</ant>
        <echo>Have a nice day ;-)</echo>
    </target>

	<target name="init">
		<tstamp/>
	</target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: fetch_svn_module                      
         - - - - - - - - - - - - - - - - - -->
    <target name="fetch_svn_module" unless="need.align" if="need.checkout" description="Exporting module: ${module}">
    	<mkdir dir="${source.base}/${todir}"/>
        <exec dir="${source.base}" failonerror="true" executable="svn">
        	<arg value="--force"/>
        	<arg value="export"/>
        	<arg value="${url}/${module}"/>
        	<arg value="${todir}"/>
    	</exec>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: fetch_align_module                      
         - - - - - - - - - - - - - - - - - -->
    <target name="fetch_align_module" unless="need.checkout" if="need.align">
    	<mkdir dir="${source.base}/${todir}"/>
    	<copy todir="${source.base}/${todir}">
    		<fileset dir="../${module}">
    			<include name="**/*"/>
    		</fileset>
    	</copy>
    </target>

	
	<!-- - - - - - - - - - - - - - - - - - 
          target: fetch_module                      
         - - - - - - - - - - - - - - - - - -->
    <target name="fetch_module" depends="fetch_svn_module,fetch_align_module">
            
    </target>

	
	<!-- ================================= 
          target: fetch              
         ================================= -->
    <target name="fetch" depends="" description="--> Fetch the source from svn">
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="utils"/>
        	<param name="todir" value="openscada_utils"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="core/common"/>
        	<param name="todir" value="openscada_core_common"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="core/server/common"/>
        	<param name="todir" value="openscada_core_server_common"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="core/client/net"/>
        	<param name="todir" value="openscada_core_client_net"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="core/net/base"/>
        	<param name="todir" value="openscada_core_net_base"/>
        </antcall>
    	<!-- DA modules -->
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/core/common"/>
        	<param name="todir" value="openscada_da_core_common"/>
        </antcall>
        <antcall target="fetch_module">
           	<param name="url" value="${svn.openscada}"/>
           	<param name="module" value="da/core/server"/>
        	<param name="todir" value="openscada_da_core_server"/>
        </antcall>
        <antcall target="fetch_module">
          	<param name="url" value="${svn.openscada}"/>
           	<param name="module" value="da/server/common"/>
           	<param name="todir" value="openscada_da_server_common"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="net/base"/>
        	<param name="todir" value="openscada_net_base"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/net/base"/>
        	<param name="todir" value="openscada_da_net_base"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/client/net"/>
        	<param name="todir" value="openscada_da_client_net"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/server/net"/>
        	<param name="todir" value="openscada_da_server_net"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/server/test"/>
        	<param name="todir" value="openscada_da_testserver"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/server/test"/>
        	<param name="todir" value="openscada_da_testserver"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/server/snmp"/>
        	<param name="todir" value="openscada_da_snmpserver"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="da/server/sysinfo"/>
        	<param name="todir" value="openscada_da_sysinfo"/>
        </antcall>
       	<!-- AE modules -->
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/core/common"/>
        	<param name="todir" value="openscada_ae_core_common"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/net/base"/>
        	<param name="todir" value="openscada_ae_net_base"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/client/net"/>
        	<param name="todir" value="openscada_ae_client_net"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/storage/common"/>
        	<param name="todir" value="openscada_ae_storage_common"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/storage/net"/>
        	<param name="todir" value="openscada_ae_storage_net"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/storage/test"/>
        	<param name="todir" value="openscada_ae_storage_test"/>
        </antcall>
        <antcall target="fetch_module">
       		<param name="url" value="${svn.openscada}"/>
        	<param name="module" value="ae/storage/syslog"/>
        	<param name="todir" value="openscada_ae_storage_syslog"/>
        </antcall>

    	<!-- external modules -->
        <antcall target="fetch_module">
        	<param name="url" value="${svn.ext}"/>
        	<param name="module" value="log4j"/>
        	<param name="todir" value="ext_log4j"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.ext}"/>
        	<param name="module" value="junit4"/>
        	<param name="todir" value="ext_junit"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.ext}"/>
        	<param name="module" value="SNMP4J"/>
        	<param name="todir" value="ext_SNMP4J"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.ext}"/>
        	<param name="module" value="mibble"/>
        	<param name="todir" value="ext_mibble"/>
        </antcall>
        <antcall target="fetch_module">
        	<param name="url" value="${svn.ext}"/>
        	<param name="module" value="xmlbeans"/>
        	<param name="todir" value="ext_xmlbeans"/>
        </antcall>

    </target>

	<!-- ================================= 
          target: compile              
         ================================= -->
    <target name="compile" depends="fetch,create_build_base,
    	utils,
    	net_base,
    	core_common,core_server_common,core_client_net,core_net_base,
    	da_core_common,da_core_server,da_net_base,da_server_net,da_testserver,da_sysinfo,da_snmpserver,da_client_net,
    	ae_core_common,ae_client_net,ae_net_base,ae_storage_syslog,ae_storage_test,ae_storage_common,ae_storage_net">
    </target>
	
	<target name="create_build_base">
		<mkdir dir="${build.base}"/>
	</target>
		
	<target name="create_dist_base">
		<mkdir dir="${dist.base}"/>
	</target>
	
	<target name="create_upload_base">
		<mkdir dir="${upload.base}"/>
	</target>
	
	<target name="utils">
		<mkdir dir="${build.base}/utils"/>
		<javac
			srcdir="${source.base}/openscada_utils/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/utils"
			encoding="utf-8"
		>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="net_base" depends="utils">
		<mkdir dir="${build.base}/net_base"/>
		<javac
			srcdir="${source.base}/openscada_net_base/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/net_base"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>

	<target name="core_common" depends="utils">
		<mkdir dir="${build.base}/core_common"/>
		<javac
			srcdir="${source.base}/openscada_core_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/core_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>

	<target name="core_client_net" depends="utils,net_base">
		<mkdir dir="${build.base}/core_client_net"/>
		<javac
			srcdir="${source.base}/openscada_core_client_net/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/core_client_net"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>

	
	<target name="da_core_common" depends="utils">
		<mkdir dir="${build.base}/da_core_common"/>
		<javac
			srcdir="${source.base}/openscada_da_core_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_core_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="core_server_common" depends="utils,core_common">
		<mkdir dir="${build.base}/core_server_common"/>
		<javac
			srcdir="${source.base}/openscada_core_server_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/core_server_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_core_server" depends="utils,core_common,da_core_common">
		<mkdir dir="${build.base}/da_core_server"/>
		<javac
			srcdir="${source.base}/openscada_da_core_server/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_core_server"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/core_server_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_server_common" depends="utils,core_common,core_server_common,da_core_common,da_core_server">
		<mkdir dir="${build.base}/da_server_common"/>
		<ant dir="${source.base}/openscada_da_server_common" antfile="build.xml" target="main"/>
		
		<copy todir="${build.base}/da_server_common">
			<fileset dir="${source.base}/openscada_da_server_common/schemasrc">
				<include name="**/*.class"/>
				<include name="**/*.xsb"/>
			</fileset>
		</copy>
		
		<javac
			srcdir="${source.base}/openscada_da_server_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_server_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_server_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/da_server_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
				<classpath refid="xmlbean.classpath"/>
		</javac>
	</target>
	
	<target name="core_net_base" depends="utils,core_common,net_base">
		<mkdir dir="${build.base}/core_net_base"/>
		<javac
			srcdir="${source.base}/openscada_core_net_base/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/core_net_base"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_net_base" depends="utils,core_common,core_net_base,da_core_server,da_core_common,da_server_common,net_base">
		<mkdir dir="${build.base}/da_net_base"/>
		<javac
			srcdir="${source.base}/openscada_da_net_base/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_net_base"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/da_server_common"/>
				<classpath location="${build.base}/net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_server_net" depends="utils,core_common,core_net_base,core_server_common,da_core_server,net_base,da_net_base">
		<mkdir dir="${build.base}/da_server_net"/>
		<javac
			srcdir="${source.base}/openscada_da_server_net/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_server_net"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/core_server_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/net_base"/>
				<classpath location="${build.base}/da_net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_testserver" depends="utils,core_common,da_server_common">
		<mkdir dir="${build.base}/da_testserver"/>
		<javac
			srcdir="${source.base}/openscada_da_testserver/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_testserver"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/da_server_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_sysinfo" depends="utils,core_common,da_server_common">
		<mkdir dir="${build.base}/da_sysinfo"/>
		<javac
			srcdir="${source.base}/openscada_da_sysinfo/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_sysinfo"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/da_server_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="da_snmpserver" depends="utils,core_common,da_server_common">
		<mkdir dir="${build.base}/da_snmpserver"/>
		<ant dir="${source.base}/openscada_da_snmpserver" antfile="build.xml" target="main">
		</ant>
		<javac
			srcdir="${source.base}/openscada_da_snmpserver/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_snmpserver"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/da_server_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
				<classpath refid="snmp.classpath"/>
				<classpath refid="xmlbean.classpath"/>
				<classpath>
					<fileset dir="${source.base}/openscada_da_snmpserver">
						<include name="*.jar"/>
					</fileset>
				</classpath>
		</javac>
	</target>

	<target name="da_client_net" depends="utils,core_common,core_net_base,core_client_net,da_core_common,da_core_server,net_base,da_net_base">
		<mkdir dir="${build.base}/da_client_net"/>
		<javac
			srcdir="${source.base}/openscada_da_client_net/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/da_client_net"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/core_client_net"/>
				<classpath location="${build.base}/da_core_common"/>
				<classpath location="${build.base}/da_core_server"/>
				<classpath location="${build.base}/net_base"/>
				<classpath location="${build.base}/da_net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="ae_core_common" depends="utils,core_common">
		<mkdir dir="${build.base}/ae_core_common"/>
		<javac
			srcdir="${source.base}/openscada_ae_core_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_core_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="ae_net_base" depends="utils,core_common,core_net_base,ae_core_common,net_base">
		<mkdir dir="${build.base}/ae_net_base"/>
		<javac
			srcdir="${source.base}/openscada_ae_net_base/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_net_base"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath location="${build.base}/net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="ae_client_net" depends="utils,core_common,core_net_base,core_client_net,ae_core_common,ae_net_base">
		<mkdir dir="${build.base}/ae_client_net"/>
		<javac
			srcdir="${source.base}/openscada_ae_client_net/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_client_net"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/core_client_net"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath location="${build.base}/net_base"/>
				<classpath location="${build.base}/ae_net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="ae_storage_common" depends="utils,core_common,core_server_common,ae_core_common">
		<mkdir dir="${build.base}/ae_storage_common"/>
		<javac
			srcdir="${source.base}/openscada_ae_storage_common/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_storage_common"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/core_server_common"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<target name="ae_storage_net" depends="utils,core_common,ae_core_common,net_base,core_net_base,ae_net_base">
		<mkdir dir="${build.base}/ae_storage_net"/>
		<javac
			srcdir="${source.base}/openscada_ae_storage_net/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_storage_net"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath location="${build.base}/net_base"/>
				<classpath location="${build.base}/core_net_base"/>
				<classpath location="${build.base}/ae_net_base"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>

	<target name="ae_storage_syslog" depends="utils,core_common,ae_storage_common">
		<mkdir dir="${build.base}/ae_storage_syslog"/>
		<ant dir="${source.base}/openscada_ae_storage_syslog" antfile="build.xml" target="main">
		</ant>
		<javac
			srcdir="${source.base}/openscada_ae_storage_syslog/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_storage_syslog"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath location="${build.base}/ae_storage_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
				<classpath refid="xmlbean.classpath"/>
				<classpath>
					<fileset dir="${source.base}/openscada_ae_storage_syslog">
						<include name="*.jar"/>
					</fileset>
				</classpath>
		</javac>
	</target>
	
	<target name="ae_storage_test" depends="utils,core_common,ae_storage_common">
		<mkdir dir="${build.base}/ae_storage_test"/>
		<javac
			srcdir="${source.base}/openscada_ae_storage_test/src"
			source="1.5"
			target="1.5"
			destdir="${build.base}/ae_storage_test"
			encoding="utf-8"
		>
				<classpath location="${build.base}/utils"/>
				<classpath location="${build.base}/core_common"/>
				<classpath location="${build.base}/ae_core_common"/>
				<classpath location="${build.base}/ae_storage_common"/>
				<classpath refid="log4j.classpath"/>
				<classpath refid="junit4.classpath"/>
		</javac>
	</target>
	
	<!-- ================================= 
          target: dist              
         ================================= -->
    <target name="dist" depends="compile" description="--> Package into JAR files">
		<mkdir dir="${dist.base}/bin"/>

        <jar destfile="${dist.base}/bin/openscada-utils-${version}${release}.jar">
			<fileset dir="${build.base}/utils">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-core-common-${version}${release}.jar">
			<fileset dir="${build.base}/core_common">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-core-client-net-${version}${release}.jar">
			<fileset dir="${build.base}/core_client_net">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-core-net-base-${version}${release}.jar">
			<fileset dir="${build.base}/core_net_base">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
    	<!-- package da -->
    	
		<jar destfile="${dist.base}/bin/openscada-da-core-common-${version}${release}.jar">
			<fileset dir="${build.base}/da_core_common">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-da-core-server-${version}${release}.jar">
			<fileset dir="${build.base}/da_core_server">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-da-server-common-${version}${release}.jar">
			<fileset dir="${build.base}/da_server_common">
   				<include name="**/*.class"/>
				<include name="**/*.xsb"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-net-base-${version}${release}.jar">
			<fileset dir="${build.base}/net_base">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-da-net-base-${version}${release}.jar">
			<fileset dir="${build.base}/da_net_base">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-da-server-net-${version}${release}.jar">
			<fileset dir="${build.base}/da_server_net">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-da-client-net-${version}${release}.jar">
			<fileset dir="${build.base}/da_client_net">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-da-testserver-${version}${release}.jar">
			<fileset dir="${build.base}/da_testserver">
   				<include name="**/*.class"/>
			</fileset>
		</jar>

		<jar destfile="${dist.base}/bin/openscada-da-snmpserver-${version}${release}.jar">
			<fileset dir="${build.base}/da_testserver">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	<copy todir="${dist.base}/bin">
    		<fileset dir="${source.base}/openscada_da_snmpserver">
    			<include name="SNMPServerSchema.jar"/>
    		</fileset>
    	</copy>
    	
		<jar destfile="${dist.base}/bin/openscada-da-sysinfo-${version}${release}.jar">
			<fileset dir="${build.base}/da_sysinfo">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
    	<!-- package AE -->
    	
		<jar destfile="${dist.base}/bin/openscada-ae-core-common-${version}${release}.jar">
			<fileset dir="${build.base}/ae_core_common">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-net-base-${version}${release}.jar">
			<fileset dir="${build.base}/ae_net_base">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-storage-common-${version}${release}.jar">
			<fileset dir="${build.base}/ae_storage_common">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-storage-net-${version}${release}.jar">
			<fileset dir="${build.base}/ae_storage_net">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-storage-syslog-${version}${release}.jar">
			<fileset dir="${build.base}/ae_storage_syslog">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-storage-test-${version}${release}.jar">
			<fileset dir="${build.base}/ae_storage_test">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
		<jar destfile="${dist.base}/bin/openscada-ae-client-net-${version}${release}.jar">
			<fileset dir="${build.base}/ae_client_net">
   				<include name="**/*.class"/>
			</fileset>
		</jar>
    	
    	<!-- gather lib jars -->
    	<mkdir dir="${dist.base}/lib"/>
    	<copy file="${source.base}/ext_log4j/log4j-1.2.13.jar" todir="${dist.base}/lib"/>
   		<copy file="${source.base}/ext_junit/junit-4.1.jar" todir="${dist.base}/lib"/>
    	<copy file="${source.base}/ext_SNMP4J/SNMP4J.jar" todir="${dist.base}/lib"/>
    	<copy todir="${dist.base}/lib">
    		<fileset dir="${source.base}/ext_mibble">
    			<include name="*.jar"/>
    		</fileset>
   		</copy>
    	<copy todir="${dist.base}/lib">
    		<fileset dir="${source.base}/ext_xmlbeans">
    			<include name="*.jar"/>
    		</fileset>
   		</copy>
    	
    	<mkdir dir="${dist.base}/schema"/>
    	<copy todir="${dist.base}/schema">
    		<fileset>
    			<include name="**/*.xsd"/>
    		</fileset>
    	</copy>
    	
    	<!-- compiling apps -->
    	<!-- TODO -->

    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
	<target name="dist_project_src">
		<mkdir dir="${dist.base}/src"/>
    	<mkdir dir="${dist.base}/src/${module}"/>
	   	<copy todir="${dist.base}/src/${module}">
    		<fileset dir="${source.base}/${module}/src">
    			<patternset id="export_pattern_set">
	   				<include name="README"/>
    	  			<include name="COPYING"/>
	       			<include name="**/*.java"/>
   				</patternset>
       		</fileset>
       	</copy>
		<mkdir dir="${build.base}/api_doc_complete"/>
		<copy todir="${build.base}/api_doc_complete">
    		<fileset dir="${source.base}/${module}/src">
    			<patternset refid="export_pattern_set"/>
       		</fileset>
       	</copy>
		<mkdir dir="${upload.base}/prj"/>
		<zip destfile="${upload.base}/prj/${module}-${version}${release}-prj.zip">
			<fileset dir="${source.base}/${module}">
    			<include name="**"/>
       		</fileset>
		</zip>
		<mkdir dir="${upload.base}/src"/>
		<zip destfile="${upload.base}/src/${module}-${version}${release}-src.zip">
			<fileset dir="${source.base}/${module}/src">
    			<patternset refid="export_pattern_set"/>
       		</fileset>
		</zip>
	</target>
	
	<target name="doc_api_prj">
		<mkdir dir="${upload.base}/docs"/>
		<mkdir dir="${upload.base}/docs/api"/>
		<mkdir dir="${upload.base}/docs/api/${module}"/>
		<javadoc destdir="${upload.base}/docs/api/${module}"
			author="true"
			version="true"
			use="true"
			encoding="utf-8"
			>
			<tag name="note" description="Note" scope="all"/>
			<tag name="warning" description="Warning" scope="all"/>
			<packageset dir="${source.base}/${module}/src" defaultexcludes="yes">
				<include name="**"/>
			</packageset>
			<classpath>
				<fileset dir="${dist.base}/bin">
					<include name="**/*.jar"/>
				</fileset>
				<fileset dir="${dist.base}/lib">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<link href="${api.href.base}/openscada_utils" offline="true" packagelistloc="${dist.base}/docs/api/openscada_utils"/>
			<link href="${api.href.base}/openscada_core_common" offline="true" packagelistloc="${dist.base}/docs/api/openscada_core_common"/>
			<link href="${api.href.base}/openscada_core_client_net" offline="true" packagelistloc="${dist.base}/docs/api/openscada_core_client_net"/>
			<link href="${api.href.base}/openscada_core_net_base" offline="true" packagelistloc="${dist.base}/docs/api/openscada_core_net_base"/>
			<link href="${api.href.base}/openscada_core_server_common" offline="true" packagelistloc="${dist.base}/docs/api/openscada_core_server_common"/>
			<link href="${api.href.base}/openscada_da_core" offline="true" packagelistloc="${dist.base}/docs/api/openscada_da_core"/>
			<link href="${api.href.base}/openscada_net_base" offline="true" packagelistloc="${dist.base}/docs/api/openscada_net_base"/>
			<link href="${api.href.base}/openscada_da_net_base" offline="true" packagelistloc="${dist.base}/docs/api/openscada_da_net_base"/>
			<link href="${api.href.base}/openscada_da_net_server" offline="true" packagelistloc="${dist.base}/docs/api/openscada_da_net_server"/>
			<link href="${api.href.base}/openscada_da_net_client" offline="true" packagelistloc="${dist.base}/docs/api/openscada_da_net_client"/>
			<link href="${api.href.base}/openscada_ae_net_client" offline="true" packagelistloc="${dist.base}/docs/api/openscada_ae_net_client"/>
			<link href="${api.href.base}/openscada_ae_net_base" offline="true" packagelistloc="${dist.base}/docs/api/openscada_ae_net_base"/>
			<link href="${api.href.base}/openscada_ae_core_common" offline="true" packagelistloc="${dist.base}/docs/api/openscada_ae_core_common"/>
			<link href="${api.href.base}/openscada_ae_storage_common" offline="true" packagelistloc="${dist.base}/docs/api/openscada_ae_storage_common"/>
		</javadoc>
	</target>
	
	<target name="export_project" depends="dist_project_src, doc_api_prj">
	</target>
	
	<!-- ================================= 
          target: dist_src
         ================================= -->
    <target name="dist_src">
    	<antcall target="export_project">
    		<param name="module" value="openscada_utils"/>
    	</antcall>
		<antcall target="export_project">
			<param name="module" value="openscada_core_common"/>
		</antcall>
    	<antcall target="export_project">
       		<param name="module" value="openscada_core_server_common"/>
       	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_core_common"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_core_server"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_server_common"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_net_base"/>
    	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_core_net_base"/>
       	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_net_base"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_server_net"/>
	   	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_core_client_net"/>
       	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_client_net"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_testserver"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_snmpserver"/>
    	</antcall>
    	<antcall target="export_project">
    		<param name="module" value="openscada_da_sysinfo"/>
    	</antcall>
    	<!-- export AE -->
    	<antcall target="export_project">
    		<param name="module" value="openscada_ae_core_common"/>
    	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_ae_storage_common"/>
       	</antcall>
      	<antcall target="export_project">
       		<param name="module" value="openscada_ae_storage_net"/>
       	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_ae_storage_syslog"/>
       	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_ae_storage_test"/>
       	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_ae_net_base"/>
       	</antcall>
       	<antcall target="export_project">
       		<param name="module" value="openscada_ae_client_net"/>
       	</antcall>

       		
    	<javadoc destdir="${dist.base}/docs/api/complete"
    		author="true"
    		version="true"
    		use="true"
    		encoding="utf-8"
    		>
    		<tag name="note" description="Note" scope="all"/>
    		<tag name="warning" description="Warning" scope="all"/>
    		<packageset dir="${build.base}/api_doc_complete" defaultexcludes="yes">
    			<include name="**"/>
    			<include name="*Test*"/>
			</packageset>
    		<classpath>
    			<fileset dir="${dist.base}/bin">
    				<include name="**/*.jar"/>
    			</fileset>
    			<fileset dir="${dist.base}/lib">
    				<include name="**/*.jar"/>
    			</fileset>
    		</classpath>
    	</javadoc>
    	
    	<copy todir="${upload.base}/docs/api/complete">
    		<fileset dir="${dist.base}/docs/api/complete">
    		</fileset>
    	</copy>
    	
	</target>
	
	<!-- ================================= 
          target: pack              
         ================================= -->
    <target name="pack" depends="dist_src,dist" description="--> Pack distribution to archive files">
        <zip destfile="${upload.base}/openscada-atlantis-${version}${release}.zip">
        	<fileset dir="${dist.base}">
        		<include name="**"/>
        	</fileset>
        </zip>
    	<tar longfile="gnu" destfile="${upload.base}/openscada-atlantis-${version}${release}.tar">
    		<tarfileset prefix="openscada-atlantis-${version}${release}" dir="${dist.base}">
        		<include name="**"/>
       		</tarfileset>
    	</tar>
    	<gzip src="${upload.base}/openscada-atlantis-${version}${release}.tar" destfile="${upload.base}/openscada-atlantis-${version}${release}.tar.gz"/>
		<bzip2 src="${upload.base}/openscada-atlantis-${version}${release}.tar" destfile="${upload.base}/openscada-atlantis-${version}${release}.tar.bz2"/>
    	<delete dir="${upload.base}/openscada-atlantis-${version}${release}.tar"/>
    </target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: clean                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean" depends="clean_source">
    	<delete dir="${build.base}"/>
		<delete dir="${dist.base}"/>
    	<delete dir="${upload.base}"/>
    </target>
    	
    <!-- - - - - - - - - - - - - - - - - - 
          target: clean_source                      
         - - - - - - - - - - - - - - - - - -->
    <target name="clean_source" if="need.checkout">
    	<delete dir="${source.base}"/>
    </target>


</project>
