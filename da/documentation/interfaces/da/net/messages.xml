<?xml version="1.0" encoding="UTF-8"?>

<messages>

  <message code="0x000000001" class="GMPP" source="any" name="CC_UNKNOWN_COMMAND_CODE">
    <description>
      Reply sent when a message could not be processed because its
      command code was not recognized.
    </description>
    <payload>
      <map>
        <description>No map entries are required</description>
      </map>
    </payload>
  </message>
  
  <message code="0x000000002" class="GMPP" source="any" name="CC_FAILED">
    <description>
      Reply when a message could not be processed due to an error.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        
        <entry key="error-info" requirement="suggested">
          <string>
            <description>An error message explaining the error.</description>
          </string>
        </entry>
        
      </map>
    </payload>
  </message>
  
  <message code="0x000000003" class="GMPP" source="any" name="CC_AKN">
    <description>
      Reply when a message was successfully processed.
    </description>
    <payload>
      <map>
        <description>No map entries are required</description>
      </map>
    </payload>
  </message>
  
  <message code="0x000000010" class="GMPP" source="any" name="CC_PING">
    <description>
      Request a CC_PONG from the peer.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="ping-data" requirement="optional">
          <any>
            <description>Any data that should be returned by CC_PONG.</description>
          </any>
        </entry>
      </map>
    </payload>
  </message>
  
  <message code="0x000000011" class="GMPP" source="any" name="CC_PONG">
    <description>
      Reply to a CC_PING.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="pong-data" requirement="optional">
          <any>
            <description>
              A data that was placed in the field ping-data of the requesting
              message. It is a must to reply with that data.
            </description>
          </any>
        </entry>
      </map>
    </payload>
  </message>
  
  <!-- START of OpenSCADA DA NET -->
  <message code="0x00010001" name="CC_CREATE_SESSION" class="OpenSCADA DA NET" source="client">
   <description>
      Request a session from the hive. The session will be associated with that
      connection.
    </description>
    <payload>
      <map>
        <description>Session request properties</description>
        <entry key="*" requirement="any">
          <string>
            <description>
              Any number of string values usefull for requesting the session.
              For example username/password.
            </description>
          </string>
        </entry>
      </map>
    </payload>
    <reply>
      The server side will respond with a CC_AKN message if succesfull and with a CC_FAILED
      message otherwise.
    </reply>
  </message>
  
  <message code="0x00010002" name="CC_CLOSE_SESSION" class="OpenSCADA DA NET" source="client">
   <description>
      Close the session previously opened and remove it from the session.
    </description>
    <payload>
      <map>
        <description>No map entries are required</description>
      </map>
    </payload>
  </message>
  
  <message code="0x00010010" name="CC_SUBSCRIBE_ITEM" class="OpenSCADA DA NET" source="client">
   <description>
      Request from the hive that the session subscribes to an item.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="item-name" requirement="required">
          <string>
            <description>
              The name of the item to subscribe to.
            </description>
          </string>
        </entry>
        <entry key="initial" requirement="optional">
          <void>
            <description>
              If set a cache read will be initiated directly after the
              was subscribed.
            </description>
          </void>
        </entry>
      </map>
    </payload>
  </message>
  
  <message code="0x00010011" name="CC_UNSUBSCRIBE_ITEM" class="OpenSCADA DA NET" source="client">
   <description>
      Request from the hive to unsubscribe the session from a subcsribed
      item.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="item-name" requirement="required">
          <string>
            <description>
              The name of the item to unsubscribe from.
            </description>
          </string>
        </entry>
      </map>
    </payload>
  </message>
  
  <message code="0x00010020" name="CC_NOTIFY_VALUE" class="OpenSCADA DA NET" source="server">
   <description>
      Notify the listener of a value change.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="item-name" requirement="required">
          <string>
            <description>
              The name of the item that is changed.
            </description>
          </string>
        </entry>
        
        <entry key="initial" requirement="optional">
          <void>
            <description>
              If set this transmission is coming from the cache instead
              from the data item itself.
            </description>
          </void>
        </entry>
        
        <entry key="value" requirement="required">
          <any>
            <description>
              The new value itself.
            </description>
          </any>
        </entry>
        
      </map>
    </payload>
  </message>
  
  
  <message code="0x00010030" name="CC_WRITE_OPERATION" class="OpenSCADA DA NET" source="client">
   <description>
      Request the hive to perform a write operation.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="item-name" requirement="required">
          <string>
            <description>
              The name of the item that should be written.
            </description>
          </string>
        </entry>
        <entry key="value" requirement="required">
          <any>
            <description>
              Any scalar value that should be written to the data item.
            </description>
          </any>
        </entry>
      </map>
    </payload>
  </message>
  
  <message code="0x00010200" name="CC_BROWSER_LIST_REQ" class="OpenSCADA DA NET" source="client">
   <description>
      Request a tree browser read operation.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="path" requirement="required">
          <list>
            <description>
              The path that should be read. It is split up in path tokens.
              So instead of using a slash or back-slash as token delimiter
              the path is stored in its tokenized form.
            </description>
            <item count="*">
              <string>
                <description>
                  Any number of path tokens.
                </description>
              </string>
            </item>
          </list>
        </entry>
      </map>
    </payload>
    <reply>
      The reply to this message is either a CC_BROWSER_LIST_RES message containing the
      result or a CC_FAILED message in case of an error.
    </reply>
  </message>
  
  <message code="0x00010201" name="CC_BROWSER_LIST_RES" class="OpenSCADA DA NET" source="server">
   <description>
      Response to a tree read request (CC_BROWSER_LIST_REQ).
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="entries" requirement="required">
          <list>
            <description>
              A list of path entries.
            </description>
            <item count="*">
              <map>
                <description>
                  The description map of this one tree entry.
                </description>
                
                <entry key="name" requirement="required">
                  <string>
                    <description>The name of the entry in the tree.</description>
                  </string>
                </entry>
                
                <entry key="type" requirement="required">
                  <string>
                    <description>The type of the entry: item, folder, unknown.</description>
                  </string>
                </entry>
                
                <entry key="attributes" requirement="required">
                  <map>
                    <description>A map of attributes describing the tree entry.</description>
                  </map>
                  <entry key="*">
                    <any>
                      <description>
                        Any scalar value can be added here as information about this item.
                      </description>
                    </any>
                  </entry>
                </entry>
                
                <entry key="item-id" requirement="optional">
                  <string>
                    <description>
                      If the type of this entry is &quot;item&quot; then this must
                      be the data item id (name).
                    </description>
                  </string>
                </entry>
                
                <entry key="io-direction" requirement="optional">
                  <integer>
                    <description>
                      But encoded value of the supported IO directions. 0x01 = INPUT, 0x02 = OUTPUT.
                    </description>
                  </integer>
                </entry>
                
              </map>
            </item>
          </list>
        </entry>
      </map>
    </payload>
  </message>
  
  <message code="0x00010211" name="CC_BROWSER_SUBSCRIBE" class="OpenSCADA DA NET" source="client">
   <description>
      Subscribe to a tree folder. Multiple subscribtions to the same folder must be ignored.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="path" requirement="required">
          <list>
            <description>
              The path that should be subscribed. It is split up in path tokens.
              So instead of using a slash or back-slash as token delimiter
              the path is stored in its tokenized form.
            </description>
            <item count="*">
              <string>
                <description>
                  Any number of path tokens.
                </description>
              </string>
            </item>
          </list>
        </entry>
      </map>
    </payload>
    <reply>
      The reply to this message is either a CC_AKN message as
      result or a CC_FAILED message in case of an error.
    </reply>
  </message>
  
  <message code="0x00010212" name="CC_BROWSER_UNSUBSCRIBE" class="OpenSCADA DA NET" source="client">
   <description>
      Subscribe to a tree folder.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        <entry key="path" requirement="required">
          <list>
            <description>
              The path that should be subscribed. It is split up in path tokens.
              So instead of using a slash or back-slash as token delimiter
              the path is stored in its tokenized form.
            </description>
            <item count="*">
              <string>
                <description>
                  Any number of path tokens.
                </description>
              </string>
            </item>
          </list>
        </entry>
      </map>
    </payload>
    <reply>
      The reply to this message is either a CC_AKN message as
      result or a CC_FAILED message in case of an error.
    </reply>
  </message>
  
  <message code="0x00010210" name="CC_BROWSER_EVENT" class="OpenSCADA DA NET" source="server">
    <description>
      A notification of changes in the tree at the subscribed path.
    </description>
    <payload>
      <map>
        <description>The root map value</description>
        
        <entry key="full" requirement="optional">
          <void>
            <description>
              If present the flag indicates that this is a full
              re-transmission and that previously stored data should
              be cleared before applying the notfied changes.
            </description>
          </void>
        </entry>
        
        <entry key="removed" requirement="required">
          <list>
            <description>
              List of tree entries that where removed.
            </description>
            <item count="*">
              <string>
                <description>
                  Tree entry name that was removed.
                </description>
              </string>
            </item>
          </list>
        </entry>
        
        <entry key="added" requirement="required">
          <list>
            <description>
              A list of path entries that changed.
            </description>
            <item count="*">
              <map>
                <description>
                  The description map of this one tree entry.
                </description>
                
                <entry key="name" requirement="required">
                  <string>
                    <description>The name of the entry in the tree.</description>
                  </string>
                </entry>
                
                <entry key="type" requirement="required">
                  <string>
                    <description>The type of the entry: item, folder, unknown.</description>
                  </string>
                </entry>
                
                <entry key="attributes" requirement="required">
                  <map>
                    <description>A map of attributes describing the tree entry.</description>
                  </map>
                  <entry key="*">
                    <any>
                      <description>
                        Any scalar value can be added here as information about this item.
                      </description>
                    </any>
                  </entry>
                </entry>
                
                <entry key="item-id" requirement="optional">
                  <string>
                    <description>
                      If the type of this entry is &quot;item&quot; then this must
                      be the data item id (name).
                    </description>
                  </string>
                </entry>
                
                <entry key="io-direction" requirement="optional">
                  <integer>
                    <description>
                      But encoded value of the supported IO directions. 0x01 = INPUT, 0x02 = OUTPUT.
                    </description>
                  </integer>
                </entry>
                
              </map>
            </item>
          </list>
        </entry>
      </map>
    </payload>
  </message>
  
</messages>