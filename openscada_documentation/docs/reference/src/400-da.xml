<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.4//EN" "http://docbook.org/xml/4.4/docbookx.dtd" []>

<chapter id="da"><title>DA - Data Access</title>
	<para>
		Data Access (<acronym>DA</acronym>) is the interface to collect live data from different
		subsystems in order to analyze, visualize and monitor it. Also the data can be used
		by other applications for further processing.
	</para>
	<para>
		The idea behind <acronym>DA</acronym> is to easily acquire and process only scalar values
		and only from the perspective or <emphasis>now</emphasis>. Other modules of
		<trademark>OpenSCADA</trademark> might have different perspective on the data (e.g.
		the <acronym>HD</acronym> interface has a focus on historical data). 
	</para>
	
	<sect1><title>Basic Concepts</title>
		<para>
			The main concept for data processing in the <acronym>DA</acronym> interface
			is the <emphasis>Data Item</emphasis> <indexterm><primary>Data Item</primary><secondary>DI</secondary></indexterm>
			which holds the value information. The <emphasis>Browser</emphasis> is
			a hierarchical presentation of the data item structure on the server side. 
		</para>
		<para>
			The <acronym>DA</acronym> also splits up the two communication parties in
			<emphasis>server</emphasis> and <emphasis>client</emphasis>. The server
			has the function to gather data and provide it to the clients. In most cases
			there are several <acronym>DA</acronym> servers which provide data from different
			types of sub-systems (<abbrev>e.g.</abbrev> <trademark>Modbus</trademark>,
			<acronym>JDBC</acronym>, <acronym>PLC</acronym>s, <abbrev>etc.</abbrev>).
			<acronym>DA</acronym> servers can also be seen as <emphasis>drivers</emphasis>
			to different data sources.  
		</para>
		
		<sect2 id="da_basic_definitions"><title>Basic definitions</title>
			
			<sect3 id="da_alarm_state"><title>Alarm State</title>
				<para>To be written</para>
			</sect3>
			
			<sect3 id="da_error_state"><title>Error State</title>
				<para>To be written</para>
			</sect3>
			
			<sect3 id="da_manual_state"><title>Manual Override State</title>
				<para>To be written</para>
			</sect3>
			
			<sect3 id="da_ackRequired_state"><title>Acknowledge Required State</title>
				<para>To be written</para>
			</sect3>
		</sect2>
		
	</sect1>
	
	<sect1><title>The Data Item</title>
		<para>
			Each data item provides exactly one value (the <emphasis>primary value</emphasis>).
			In addition to that primary value there might be several
			<emphasis>secondary values</emphasis> which contribute information to the primary
			value. Secondary values (or <emphasis>attributes</emphasis>) are a set of key/value
			pairs. Each data item can provide its own attributes but there are several
			<quote>common attributes</quote> which should be common to all, or most, data items.
		</para>
		
	<sect2><title>Common Data Item Attributes</title>
		<para>
		<table><title>GMPP connection URI parts</title>
			<tgroup cols="3">
			<thead>
				<row>
					<entry>Name</entry>
					<entry>Type</entry>
					<entry>Description</entry>
				</row>
			</thead>
			<tbody>
				
				<row>
					<entry>alarm</entry>
					<entry>Boolean</entry>
					<entry>
					A summary alarm attribute which combines all alarm states,
					as defined in <link linkend="da_basic_definitions"></link>,
					using a logical <quote>or</quote>.
					This attribute is read only.  
					</entry>
				</row>
				<row>
					<entry>error</entry>
					<entry>Boolean</entry>
					<entry>
					A summary error attribute which combines all error states,
					as defined in <link linkend="da_basic_definitions"></link>,
					using a logical <quote>or</quote>.
					This attribute is read only.
					</entry>
				</row>
				<row>
					<entry>manual</entry>
					<entry>Boolean</entry>
					<entry>
					A summary manual attribute which combines all manual states,
					as defined in <link linkend="da_basic_definitions"></link>,
					using a logical <quote>or</quote>.
					This attribute is read only.
					</entry>
				</row>
				<row>
					<entry>ackRequired</entry>
					<entry>Boolean</entry>
					<entry>
					A summary acknowledge required attribute which combines all required
					acknowledge states, as defined in <link linkend="da_basic_definitions"></link>,
					using a logical <quote>or</quote>.
					This attribute is read only.
					</entry>
				</row>
				<row>
					<entry>debug</entry>
					<entry>Boolean</entry>
					<entry>
					A debug state item that can be written by some client in order to
					activate debug functionality on this item only. This might <abbrev>e.g.</abbrev>
					activate some more attributes or system logging information. This attribute must
					be read- and writable by clients.
					</entry>
				</row>


				
			</tbody>
			</tgroup>
		</table>
		</para>
	</sect2>
		
	</sect1>
	
</chapter>