<?xml version="1.0"?>
<!-- ====================================================================== 
     OpenSCADA Atlantis
                   
     Jens Reimann
     ====================================================================== -->
<project name="OpenSCADA P2 Repository" default="default" xmlns:antelope="openscada:/antelope">
    <description>
            OpenSCADA P2 Repository
    </description>
	
	<property environment="env" />
	<property file="config/build.properties"/>
	<property file="config/local.properties"/>

	<property name="eclipse.home.dir" value="/home/user/eclipse"/>
	<property name="eclipse.launcher.version" value="_1.0.100.v20080509-1800"/>
	<property name="startup" value="${eclipse.home.dir}/plugins/org.eclipse.equinox.launcher${eclipse.launcher.version}.jar"/>
	<property name="build.dir" value="${java.io.tmpdir}/p2build"/>
	<property name="deploy.repo.dir" value="${java.io.tmpdir}/p2deploy"/>
	<property name="deploy.zip.dir" value="${java.io.tmpdir}/p2zip"/>
	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="init, clean, build, deploy" description="--> The OpenSCADA RCP Client">
    </target>
	
	<target name="init">
		<tstamp>
			<format property="BUILD_TAG" pattern="yyyyMMddhhmm"/>
		</tstamp>
		<echo message="BuildTag: ${BUILD_TAG}"/>
		<echo message="Deploy Repo Dir: ${deploy.repo.dir}"/>
	</target>
	
	<target name="clean">
		<delete dir="${build.dir}" failonerror="false"/>
		<delete dir="${deploy.repo.dir}" failonerror="false"/>
	</target>
	
	<target name="build" depends="init">
		<property name="file" location="${build.dir}/all.zip"/>
			
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.dir}/repo"/>
			
		<get usetimestamp="true" src="http://download.openscada.org/atlantis/${publish.type}/latest/org.openscada.atlantis-${build.version.maven}-all.zip" dest="${file}" />
		<mkdir dir="${build.dir}/unpack/plugins"/>
			
		<!-- generate externals -->
			<delete dir="${build.dir}/unpack/plugins" failonerror="false"/>
		<unzip src="${file}" dest="${build.dir}/unpack/plugins" overwrite="true">
			<patternset>
				<include name="**/lib/*.jar"/>
			</patternset>
			<mapper type="flatten"/>
		</unzip>
		
		<eclipse.p2generator source="${build.dir}/unpack" target="${build.dir}/repo"
			root="org.openscada.externals" rootVersion="${build.version.osgi}${BUILD_TAG}"/>
	
		<!-- generate internals -->
		<delete dir="${build.dir}/unpack/plugins" failonerror="false"/>
		<unzip src="${file}" dest="${build.dir}/unpack/plugins" overwrite="true">
			<patternset>
				<include name="**/bin/*.jar"/>
			</patternset>
			<mapper type="flatten"/>
		</unzip>
		
		<eclipse.p2generator source="${build.dir}/unpack" target="${build.dir}/repo"
			root="org.openscada" rootVersion="${build.version.osgi}${BUILD_TAG}"/>
		
		<delete dir="${build.dir}/unpack/plugins" failonerror="false"/>
	</target>
	
	<!-- ================================= 
          target: deploy              
         ================================= -->
    <target name="deploy" depends="build" description="Deploy Repository">
        <mkdir dir="${deploy.repo.dir}/base"/>
    	<copy todir="${deploy.repo.dir}/base">
    		<fileset dir="${build.dir}/repo">
    		</fileset>
    	</copy>
    	
    	<mkdir dir="${deploy.zip.dir}"/>
    	<zip destfile="${deploy.zip.dir}/org.openscada.atlantis.base-p2repo-${build.version.osgi}.zip">
    		<fileset dir="${build.dir}/repo">
    			<include name="**/*"/>
    		</fileset>
    	</zip>
    </target>

	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: eclipse.p2generator          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="eclipse.p2generator">
    	<attribute name="source"/>
    	<attribute name="target"/>
    	<attribute name="root"/>
    	<attribute name="rootVersion"/>
        <sequential>
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.equinox.p2.metadata.generator.EclipseGenerator" />
        		
        		<arg value="-console"/>
        		<arg value="-consoleLog"/>
        		
        		<arg value="-source"/>
        		<arg value="@{source}"/>

				<arg value="-metadataRepository"/>
        		<arg value="file://@{target}"/>
        		
        		<arg value="-metadataRepositoryName"/>
        		<arg value="OpenSCADA Base Repository"/>
        		
        		<arg value="-artifactRepositoryName"/>
        		<arg value="OpenSCADA Base Repository"/>
        			
        		<arg value="-artifactRepository"/>
        		<arg value="file://@{target}"/>
        		
        		<arg value="-publishArtifacts"/>
        		<arg value="-publishArtifactRepository"/>
        		
        		<arg value="-root"/>
        		<arg value="@{root}"/>
        		<arg value="-rootVersion"/>
        		<arg value="@{rootVersion}"/>

				<arg value="-append"/>
			</java>
        	
        </sequential>
    </macrodef>

<!-- = = = = = = = = = = = = = = = = =
          macrodef: eclipse.p2publisher          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="eclipse.p2publisher">
    	<attribute name="source"/>
    	<attribute name="target"/>
    	<attribute name="root"/>
    	<attribute name="rootVersion" />
        <sequential>
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.equinox.p2.publisher.FeaturesAndBundlesPublisher" />

        		<arg value="-console"/>
        		<arg value="-consoleLog"/>
        		
        		<arg value="-source"/>
        		<arg value="@{source}"/>

				<arg value="-metadataRepository"/>
        		<arg value="file://@{target}"/>
        		
        		<arg value="-metadataRepositoryName"/>
        		<arg value="OpenSCADA Base Repository"/>
        		
        		<arg value="-artifactRepositoryName"/>
        		<arg value="OpenSCADA Base Repository"/>
        			
        		<arg value="-artifactRepository"/>
        		<arg value="file://@{target}"/>
        		
        		<arg value="-publishArtifacts"/>
        		<arg value="-root"/>
        		<arg value="@{root}"/>
        		<arg value="-rootVersion"/>
        		<arg value="@{rootVersion}"/>

				<arg value="-append"/>
			</java>
        	
        </sequential>
    </macrodef>

</project>
