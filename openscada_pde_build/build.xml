<?xml version="1.0"?>
<!-- ====================================================================== 
     OpenSCADA Atlantis
                   
     Jens Reimann
     ====================================================================== -->
<project name="OpenSCADA" default="default" xmlns:antelope="openscada:/antelope">
    <description>
            OpenSCADA
    </description>
	
	<property file="config/local.properties"/>

	<property name="eclipse.home" value="/home/user/eclipse"/>
	<property name="eclipse.builder.version" value="_3.4.0.v20080604"/>
	<property name="eclipse.launcher.version" value="_1.0.100.v20080509-1800"/>
	<property name="startup" value="${eclipse.home}/plugins/org.eclipse.equinox.launcher${eclipse.launcher.version}.jar"/>
	<property name="libfile" location="lib/build.xml"/>
	<property name="buildDirectory" value="${basedir}/eclipse.build"/>
	<property name="configs" value="win32,win32,x86&amp;linux,gtk,x86&amp;linux,gtk,x86_64&amp;macosx,carbon,ppc&amp;solaris,gtk,sparc"/>
	<property name="buildType" value="I"/>
	<property name="buildId" value="AutoBuild"/>
	<property name="version" value="0.12"/>
	<property name="release" value="-RC2"/>
	
	<property name="deploy.dir" location="${deploy.base}/deploy"/>
	
    <!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="init, clean, build" description="--> The OpenSCADA RCP Client">
    </target>
	
	<target name="init">
		<tstamp/>
	</target>
	
	<target name="clean">
		<delete dir="${buildDirectory}"/>
		<delete dir="${deploy.base}"/>
	</target>
	
	<target name="build">
		<eclipse.productBuild builderDir="ostc" />
		<eclipse.bundleBuild builderDir="ide" />
	</target>
	
	<target name="win32installer">
		<mkdir dir="media"/>
		<copy todir="media" file="${buildDirectory}/plugins/org.openscada.rcp.client/splash.bmp">
		</copy>
		<unzip dest="nsis.build" src="${upload.base.ostc}/${buildId}-win32.win32.x86.zip"/>
		<delete dir="nsis.out"/>
		<mkdir dir="nsis.out"/>
		<exec failonerror="true" executable="makensis">
			<arg value="-DVERSION=${version}"/>
			<arg value="-DRELEASE=${release}"/>
			<arg value="-DDEPLOY=nsis.build"/>
			<arg value="-DMEDIA=media"/>
			<arg value="-DOUT=nsis.out"/>
			<arg value="setup.nsi"/>
		</exec>
		<zip destfile="${upload.base.ostc}/ostc-${version}${release}-win32-setup.zip" basedir="nsis.out">
		</zip>
		<copy todir="${upload.base.ostc}">
			<fileset dir="nsis.out">
				<include name="*.exe"/>
			</fileset>
		</copy>
	</target>
	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: eclipse.productBuild          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="eclipse.productBuild">
        <attribute name="builderDir"  />
        <sequential>
        	<delete dir="${buildDirectory}" failonerror="false"/>
        	<mkdir dir="${buildDirectory}" />
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true" dir="${eclipse.home}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.ant.core.antRunner" />
			    <arg value="-buildfile" />
		   		<arg value="${eclipse.home}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts/productBuild/productBuild.xml" />
				<arg value="-Dbuilder=${basedir}/@{builderDir}"/>
	    		<arg value="-DbaseLocation=${eclipse.home}"/>
				<arg value="-DbuildDirectory=${buildDirectory}"/>

				<!-- version information -->
		   		<arg value="-DbuildType=${buildType}"/>
				<arg value="-DbuildId=${buildId}"/>
	    		
	    		<!-- configs -->
	    		<arg value="-Dconfigs=${configs}"/>
        		
        		<!-- pass on -->
        		<arg value="-Dlibfile=${libfile}"/>
        		<arg value="-Dversion=${version}"/>
        		<arg value="-Drelease=${release}"/>
        		<arg value="-Dmaven.repository=${maven.repository}"/>
			</java>
        	
        	<mkdir dir="${deploy.dir}/@{builderDir}"/>
        	<copy todir="${deploy.dir}/@{builderDir}">
        		<fileset dir="${buildDirectory}">
        			<include name="**/${buildType}.${buildId}/${buildId}*.zip"/>
        		</fileset>
        		<mapper type="flatten"/>
        	</copy>
        </sequential>
    </macrodef>
    
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: eclipse.bundleBuild          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="eclipse.bundleBuild">
        <attribute name="builderDir"  />
        <sequential>
        	<delete dir="${buildDirectory}" failonerror="false"/>
        	<mkdir dir="${buildDirectory}" />
        	<java jar="${startup}" failonerror="true" maxmemory="1024m" fork="true" dir="${eclipse.home}/plugins/org.eclipse.pde.build${eclipse.builder.version}/scripts">
	    		<jvmarg value="-XX:MaxPermSize=256m"/>
	    		
				<arg value="-application" />
			    <arg value="org.eclipse.ant.core.antRunner" />
				<arg value="-Dbuilder=${basedir}/@{builderDir}"/>
	    		<arg value="-DbaseLocation=${eclipse.home}"/>
				<arg value="-DbuildDirectory=${buildDirectory}"/>

				<!-- version information -->
		   		<arg value="-DbuildType=${buildType}"/>
				<arg value="-DbuildId=${buildId}"/>
	    		
        		<!-- pass on -->
        		<arg value="-Dlibfile=${libfile}"/>
        		<arg value="-Dversion=${version}"/>
        		<arg value="-Drelease=${release}"/>
        		<arg value="-Dmaven.repository=${maven.repository}"/>
			</java>
        	
        	<mkdir dir="${deploy.dir}/@{builderDir}"/>
        	<copy todir="${deploy.dir}/@{builderDir}">
        		<fileset dir="${buildDirectory}">
        			<include name="**/${buildType}.${buildId}/*.zip"/>
        		</fileset>
        		<mapper type="flatten"/>
        	</copy>
        </sequential>
    </macrodef>

</project>
