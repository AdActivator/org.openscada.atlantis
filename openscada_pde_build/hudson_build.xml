<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     OpenSCADA RCP Client (Hudson)
                   
     Jens Reimann                                                                
     ====================================================================== -->
<project name="OpenSCADA RCP Client (Hudson)" default="default" basedir=".">
    <description>
    	"OpenSCADA RCP Client (Hudson)"
    </description>

	<property environment="env"/>
	
	<property file="config/build.properties"/>
	<property file="config/local.properties"/>
	
	<property name="eclipse.pack.dir" value="/home/user/eclipse.pack"/>
	
	<property name="publish.type" value="integration"/>	
	<property name="publish.id" value="${build.version.osgi}" />
	
	<property name="repoBaseLocation" value="${tmp.base}/repoBaseLocation"/>
	
	<!-- deploy dirs -->
	
	<property name="deploy.zip.dir" value="${deploy.base}/deploy/p2zip"/>
	<property name="deploy.repo.dir" value="${deploy.base}/deploy/p2reop"/>
	
	<!-- publish dirs -->
	
	<property name="publish.repo.dir" value="${publish.repo.base}/${publish.type} "/>
	
	<!-- eclipse stuff -->
	
	<property name="eclipse.dropId" value="R-3.5-200906111540"/>
	
	<!-- where will the eclipse folder be placed -->
	<property name="eclipse.home.base" value="${env.WORKSPACE}"/>
	<!-- the eclipse folder based on ${eclipse.home.base}. The last
	     folder must be named 'eclipse'-->  
	<property name="eclipse.home.dir" value="${eclipse.home.base}/eclipse"/>
		
	<!-- ================================= 
          target: default              
         ================================= -->
    <target name="default" depends="build,publish" description="Build">
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: init                      
         - - - - - - - - - - - - - - - - - -->
    <target name="init" depends="check">
    	<echo message="Build type: ${publish.type}"/>
    	<echo message="Eclipse Target: ${eclipse.home.dir}"/>
    	
    	<echo message="DeployRepoDir: ${deploy.repo.dir}"/>
    </target>
	
	<!-- - - - - - - - - - - - - - - - - - 
          target: check                      
         - - - - - - - - - - - - - - - - - -->
    <target name="check">
    	<fail unless="configs"/>
    	<fail unless="buildType"/>
    	<fail unless="buildId"/>
    	<fail unless="eclipse.builder.version"/>
    	<fail unless="eclipse.launcher.version"/>
    		
    	<fail unless="env.WORKSPACE" message="Please set the environment variable 'WORKSPACE'"/>
    	<fail unless="publish.id" message="Please set the environment variable 'publish.id'"/>
    	<fail unless="publish.download.base" message="Please set the publish target 'publish.download.base'"/>
    	<fail unless="publish.repo.base" message="Please set the publish target 'publish.repo.base'"/>
    	
    	<!-- should be there in hudson, but maybe not when we test locally -->
    	<mkdir dir="${env.WORKSPACE}"/>
    </target>

	<!-- ================================= 
          target: unpackEclipse              
         ================================= -->
    <target name="unpackEclipse" depends="init" description="description" unless="skipUnpack">
    	<delete dir="${eclipse.home.dir}" failonerror="false"/>
    	<provideEclipseDownload.tar dropFile="eclipse-SDK-3.5-linux-gtk.tar.gz" dropId="${eclipse.dropId}"/>
    	<provideEclipseDownload.zip dropFile="eclipse-3.5-delta-pack.zip" dropId="${eclipse.dropId}"/>
    	<provideEclipseDownload.zip dropFile="GEF-ALL-3.5.0.zip" dropId="3.5.0/R200906221200" project="tools/gef"/>
    </target>

	
	<!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="build.p2,build.pde" description="Build all">
        
    </target>

	
	<!-- ================================= 
          target: build              
         ================================= -->
    <target name="build.p2" depends="unpackEclipse" description="Build P2" unless="skipP2">
        <ant antfile="p2build.xml">
        	<property name="deploy.repo.dir" value="${deploy.repo.dir}"/>
        	<property name="deploy.zip.dir" value="${deploy.base}/deploy/p2zip"/>
    	</ant>
    </target>
    
	<!-- ================================= 
          target: build.pde              
         ================================= -->
    <target name="build.pde" depends="unpackEclipse" description="Build PDE stuff" unless="skipPDE">
        <ant antfile="pdebuild.xml">
        	<property name="deploy.repo.dir" value="${deploy.repo.dir}"/>
        	<property name="maven.repository" value="${maven.repository}"/>
    	</ant>        
    </target>

	
    <!-- ================================= 
          target: publish              
         ================================= -->
    <target name="publish" depends="check" description="Publish">
    	
    	<mkdir dir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/ostc"/>
    	<copy todir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/ostc">
    		<fileset dir="${deploy.base}/deploy/ostc">
    			<include name="*.zip"/>
    		</fileset>
    	</copy>
    	
    	<mkdir dir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/ide"/>
    	<copy todir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/ide">
    		<fileset dir="${deploy.base}/deploy/ide">
    			<include name="*.zip"/>
    		</fileset>
    	</copy>
    	
    	<mkdir dir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/p2"/>
    	<copy todir="${publish.download.base}/atlantis/${publish.type}/${publish.id}/p2">
    		<fileset dir="${deploy.repo.dir}">
    			<include name="*.zip"/>
    		</fileset>
    	</copy>
    	
    	<!-- copy p2 repository unpacked -->
    	<mkdir dir="${publish.repo.dir}" />
    	<copy todir="${publish.repo.dir}">
    		<fileset dir="${deploy.repo.dir}" />
    	</copy>
    	
    	<!-- make latest link -->
    	<exec executable="rm">
    		<arg value="-f"/>
    		<arg value="${publish.download.base}/atlantis/${publish.type}/latest"/>
    	</exec>    	
    	<exec executable="ln">
    		<arg value="-fs"/>
    		<arg value="${publish.download.base}/atlantis/${publish.type}/${publish.id}"/>
    		<arg value="${publish.download.base}/atlantis/${publish.type}/latest"/>
    	</exec>
    </target>

	<!-- = = = = = = = = = = = = = = = = =
          macrodef: provideEclipseDownload.tar          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="provideEclipseDownload.tar">
    	<attribute name="dropId"/>
    	<attribute name="dropFile"/>
    	<attribute name="project" default="eclipse"/>
    	<attribute name="compression" default="gzip"/>
        <sequential>
        	<mkdir dir="${eclipse.pack.dir}"/>
        	<get usetimestamp="true" dest="${eclipse.pack.dir}/@{dropFile}" src="${eclipse.download.base}/@{project}/downloads/drops/@{dropId}/@{dropFile}" />
        	<untar src="${eclipse.pack.dir}/@{dropFile}" dest="${eclipse.home.base}" compression="@{compression}" />
        </sequential>
    </macrodef>
    	
	<!-- = = = = = = = = = = = = = = = = =
          macrodef: provideEclipseDownload.zip          
         = = = = = = = = = = = = = = = = = -->
    <macrodef name="provideEclipseDownload.zip">
    	<attribute name="dropId"/>
    	<attribute name="dropFile"/>
    	<attribute name="project" default="eclipse"/>
        <sequential>
        	<mkdir dir="${eclipse.pack.dir}"/>
        	<get usetimestamp="true" dest="${eclipse.pack.dir}/@{dropFile}" src="${eclipse.download.base}/@{project}/downloads/drops/@{dropId}/@{dropFile}" />
    		<unzip src="${eclipse.pack.dir}/@{dropFile}" dest="${eclipse.home.base}" />
        </sequential>
    </macrodef>
	
</project>